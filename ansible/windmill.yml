---
- name: Manage Windmill Workers
  hosts: windmill_workers
  gather_facts: yes

  vars:
    operation: "{{ op | default('status') }}"
    worker: "{{ worker_name | default('') }}"
    git_branch: "{{ branch | default('main') }}"

  tasks:
    - name: Check if windmill directory exists
      stat:
        path: "{{ windmill_path }}"
      register: windmill_dir

    - name: Skip hosts without windmill directory or empty worker_types
      debug:
        msg: "Skipping {{ inventory_hostname }} - no windmill directory or no worker types defined"
      when: not windmill_dir.stat.exists or (worker_types is not defined or worker_types|length == 0)

    - name: Check if windmill.sh script exists
      stat:
        path: "{{ windmill_path }}/windmill.sh"
      register: windmill_script
      when: windmill_dir.stat.exists and (worker_types is defined and worker_types|length > 0)

    - name: Execute windmill command (configured workers only)
      shell: |
        cd {{ windmill_path }}
        ./windmill.sh {{ operation }} {{ item }}
      register: windmill_worker_output
      loop: "{{ worker_types }}"
      when: worker == "" and operation != "update" and windmill_dir.stat.exists and (worker_types is defined and worker_types|length > 0)

    - name: Execute windmill command (specific worker)
      shell: |
        cd {{ windmill_path }}
        ./windmill.sh {{ operation }} {{ worker }}
      register: windmill_specific_output
      when: worker != "" and operation != "update" and windmill_dir.stat.exists and (worker_types is defined and worker in worker_types)

    - name: Git pull to update code
      shell: |
        cd {{ windmill_path }}
        git pull origin {{ git_branch }}
      register: git_output
      when: operation == "update" and windmill_dir.stat.exists and (worker_types is defined and worker_types|length > 0)

    - name: Display git update output
      debug:
        msg: |
          === {{ inventory_hostname }} Git Update ===
          {{ git_output.stdout }}
          {% if git_output.stderr %}
          STDERR: {{ git_output.stderr }}
          {% endif %}
      when: operation == "update" and git_output is defined and git_output.stdout is defined

    - name: Display windmill output (configured workers)
      debug:
        msg: "{{ item.stdout | regex_replace('\\x1b\\[[0-9;]*m', '') | split('\n') }}"
      loop: "{{ windmill_worker_output.results }}"
      when: operation != "update" and worker == "" and windmill_worker_output is defined and item.stdout is defined

    - name: Display windmill output (specific worker)
      debug:
        msg: "{{ windmill_specific_output.stdout | regex_replace('\\x1b\\[[0-9;]*m', '') | split('\n') }}"
      when: operation != "update" and worker != "" and windmill_specific_output is defined and windmill_specific_output.stdout is defined

    - name: Check for windmill errors (configured workers)
      fail:
        msg: "Command failed on {{ inventory_hostname }}: {{ item.stderr }}"
      loop: "{{ windmill_worker_output.results }}"
      when: worker == "" and windmill_worker_output is defined and item.rc is defined and item.rc != 0

    - name: Check for windmill errors (specific worker)
      fail:
        msg: "Command failed on {{ inventory_hostname }}: {{ windmill_specific_output.stderr }}"
      when: worker != "" and windmill_specific_output is defined and windmill_specific_output.rc is defined and windmill_specific_output.rc != 0